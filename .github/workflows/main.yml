name: Flet Multi-Platform Build

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.2
  # 使用兼容的 Flutter 版本
  FLUTTER_VERSION: "3.19.6"  # 这个版本支持 Dart 3.3，兼容性较好

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      flutter-version: ${{ steps.get-version.outputs.flutter-version }}
      dart-version: ${{ steps.get-version.outputs.dart-version }}
    
    steps:
    - name: Setup Flutter with compatible version
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Get Flutter and Dart versions
      id: get-version
      run: |
        FLUTTER_VERSION=$(flutter --version | grep -oE "Flutter [0-9]+\.[0-9]+\.[0-9]+" | cut -d' ' -f2)
        DART_VERSION=$(dart --version | grep -oE "Dart [0-9]+\.[0-9]+\.[0-9]+" | cut -d' ' -f2)
        echo "flutter-version=$FLUTTER_VERSION" >> $GITHUB_OUTPUT
        echo "dart-version=$DART_VERSION" >> $GITHUB_OUTPUT
        echo "Using Flutter $FLUTTER_VERSION with Dart $DART_VERSION"

  build-linux:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ needs.setup-environment.outputs.flutter-version }}
        channel: stable

    - name: Install system dependencies for Linux
      run: |
        sudo apt-get update -y
        sudo apt-get install -y ninja-build libgtk-3-dev clang cmake

    - name: Build for Linux
      run: |
        cd src
        flet build linux --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-app
        path: build/linux/**/*

  build-windows:
    runs-on: windows-latest
    needs: setup-environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python Dependencies
      run: |
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ needs.setup-environment.outputs.flutter-version }}
        channel: stable

    - name: Build for Windows
      run: |
        cd src
        flet build windows --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-app
        path: build/windows/**/*

  build-macos:
    runs-on: macos-latest
    needs: setup-environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ needs.setup-environment.outputs.flutter-version }}
        channel: stable

    - name: Build for macOS
      run: |
        cd src
        flet build macos --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: build/macos/**/*

  build-android:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ needs.setup-environment.outputs.flutter-version }}
        channel: stable

    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '11'  # 使用 JDK 11 以获得更好的兼容性

    - name: Build Android APK
      run: |
        cd src
        flet build apk --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload Android Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/apk/**/*.apk

  build-web:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ needs.setup-environment.outputs.flutter-version }}
        channel: stable

    - name: Build for Web
      run: |
        cd src
        flet build web --build-number=$BUILD_NUMBER --build-version=$BUILD_VERSION

    - name: Upload Web Artifact
      uses: actions/upload-artifact@v4
      with:
        name: web-app
        path: build/web/**/*
