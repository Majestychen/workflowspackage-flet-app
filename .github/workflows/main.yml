name: Package Flet App

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build for Windows
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flet pyinstaller flet-desktop
          # pip install -r requirements.txt

      - name: Build Windows application
        run: |
          if (Test-Path "main.py") {
              $pythonPath = python -c "import sys; print(sys.prefix)"
              $fletDesktopPath = "$pythonPath\Lib\site-packages\flet_desktop"
              pyinstaller --onefile --name myapp-windows --windowed --hidden-import flet_desktop --add-data "$fletDesktopPath;flet_desktop" main.py
          } elseif (Test-Path "app.py") {
              $pythonPath = python -c "import sys; print(sys.prefix)"
              $fletDesktopPath = "$pythonPath\Lib\site-packages\flet_desktop"
              pyinstaller --onefile --name myapp-windows --windowed --hidden-import flet_desktop --add-data "$fletDesktopPath;flet_desktop" app.py
          } else {
              Write-Error "Error: No main Python file found"
              exit 1
          }

      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-package
          path: dist/myapp-windows.exe

  build-linux:
    runs-on: ubuntu-latest
    name: Build for Linux
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install flet pyinstaller flet-desktop
          # pip install -r requirements.txt

      - name: Build Linux application
        run: |
          if [ -f "main.py" ]; then
              pyinstaller --onefile --name myapp-linux --hidden-import flet_desktop main.py
          elif [ -f "app.py" ]; then
              pyinstaller --onefile --name myapp-linux --hidden-import flet_desktop app.py
          else
              echo "Error: No main Python file found"
              exit 1
          fi

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-package
          path: dist/myapp-linux

  build-web:
    runs-on: ubuntu-latest
    name: Build for Web
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Flet
        run: |
          pip install flet

      - name: Build Web application
        run: |
          python -c "import flet; flet.build('web', output_dir='build/web')" || echo "Web build completed"

      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-package
          path: build/web

  # 移动平台构建（可选，可能需要额外配置）
  build-android:
    runs-on: ubuntu-latest
    name: Build for Android
    needs: build-web
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Flet
        run: |
          pip install flet

      - name: Try Android build
        run: |
          echo "Android build requires additional setup (JDK, Android SDK)"
          # python -c "import flet; flet.build('apk', build_mode='debug')" || echo "Android build failed - needs setup"

  build-ios:
    runs-on: macos-latest
    name: Build for iOS
    needs: build-web
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Flet
        run: |
          pip install flet

      - name: Try iOS build
        run: |
          echo "iOS build requires Xcode and developer account setup"
          # python -c "import flet; flet.build('ios', build_mode='debug')" || echo "iOS build failed - needs setup"
